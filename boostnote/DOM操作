###DOM操作
DOM标准规定HTML文档中的每个成分都是一个节点(node)：

文档节点(document对象)：代表整个文档
元素节点(element 对象)：代表一个元素（标签）
文本节点(text对象)：代表元素（标签）中的文本
属性节点(attribute对象)：代表一个属性，元素（标签）才有属性
注释是注释节点(comment对象)　

>JavaScript 可以通过DOM创建动态的 HTML：

  JavaScript 能够改变页面中的所有 HTML 元素
  JavaScript 能够改变页面中的所有 HTML 属性
  JavaScript 能够改变页面中的所有 CSS 样式
  JavaScript 能够对页面中的所有事件做出反应

#### 查找标签
>直接查找
1. document.getElementById           根据ID获取一个标签
2. document.getElementsByClassName   根据class属性获取
3. document.getElementsByTagName     根据标签名获取标签合集

> 间接查找
1. ele.parentElement 父节点标签元素
2. ele.children 所有的子标签
3. firstElementChild  第一个子标签元素
4. lastElementChild  最后一个子标签元素
5. nextElementSibling 下一个兄弟标签元素
6. previousElementSibling  上一个兄弟标签元素

#### 节点操作
> 创建节点
> 
var d1Ele = document.createElement("div");

> 添加节点

1. 追加一个子节点（作为最后的子节点）
ele.appendChild(newnode)；
2. 把增加的节点放到某个节点的前边。
ele.insertBefore(newnode,某个节点);
```python
var imgEle=document.createElement("img");
imgEle.setAttribute("src", "http://image11.m1905.cn/uploadfile/s2010/0205/20100205083613178.jpg");
var d1Ele = document.getElementById("d1");
d1Ele.appendChild(imgEle);
```

> 删除节点
> 
获得要删除的元素，通过父元素调用删除。
fartherEle.removeChild(要删除的节点)

> 替换节点
> 
fartherEle.replaceChild(newnode, 某个节点);


#### 节点属性
> 获取节点文本的值
> 
```python
var divEle = document.getElementById("d1")
divEle.innerText
divEle.innerHTML
```

> 设置文本节点的值
> 
```python
var divEle = document.getElementById("d1")
divEle.innerText="1"
divEle.innerHTML="<p>2</p>"
```
**注意:**
innerText设置后，连元素里面的所有的标签以及文本信息都会修改，不能识别HTML标签

> 设置属性
> 
```python
var divEle = document.getElementById("d1");
divEle.setAttribute("age","18")
divEle.getAttribute("age")
divEle.removeAttribute("age")

// 自带的属性还可以直接.属性名来获取和设置
imgEle.src
imgEle.src="..."
```
#### 获取值
ele.value
仅试用与.input\.select\.textarea
ele.value

> select中找到所有的option标签
> Ele.options
> 

#### class属性操作
```
className  获取所有样式类名(字符串)

classList.remove(cls)  删除指定类
classList.add(cls)  添加类
classList.contains(cls)  存在返回true，否则返回false
classList.toggle(cls)  存在就删除，否则添加
```

#### 指定css操作
ele.style.backgroundColor="red"

JS操作CSS属性的规律：
1. 对于没有中横线的CSS属性一般直接使用style.属性名即可
2. 对含有中横线的CSS属性，将中横线后面的第一个字母换成大写即可

#### 事件
> 常用事件
> 
```
onclick        当用户点击某个对象时调用的事件句柄。
ondblclick     当用户双击某个对象时调用的事件句柄。

onfocus        元素获得焦点。               // 练习：输入框
onblur         元素失去焦点。               应用场景：用于表单验证,用户离开某个输入框时,代表已经输入完了,我们可以对它进行验证.
onchange       域的内容被改变。             应用场景：通常用于表单元素,当元素内容被改变时触发.（select联动）

onkeydown      某个键盘按键被按下。          应用场景: 当用户在最后一个输入框按下回车按键时,表单提交.
onkeypress     某个键盘按键被按下并松开。
onkeyup        某个键盘按键被松开。
onload         一张页面或一幅图像完成加载。
onmousedown    鼠标按钮被按下。
onmousemove    鼠标被移动。
onmouseout     鼠标从某元素移开。
onmouseover    鼠标移到某元素之上。

onselect      在文本框中的文本被选中时发生。
onsubmit      确认按钮被点击，使用的对象是form。
```
> 绑定方式
> 
方式一：
```python
<div id="d1" onclick="changeColor(this);">点我</div>
<script>
  function changeColor(ths) {
    ths.style.backgroundColor="green";
  }
</script>
```
注意：
this是实参，表示触发事件的当前元素。
函数定义过程中的ths为形参。

方式二：
```python
<div id="d2">点我</div>
<script>
  var divEle2 = document.getElementById("d2");
  divEle2.onclick=function () {
    this.innerText="呵呵";
  }
</script>
```


